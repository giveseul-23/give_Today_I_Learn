<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

		<context:component-scan base-package="com.spring.biz" />

		<!-- AOP 설정(네임스페이스 xmlns:aop 추가) -->
		<!-- *Impl 클래스의 모든 메소드 실행전에 LogAdvice.printLog() 실행  -->
		<!--<bean id="log" class="com.spring.biz.common.LogAdvice" />
		<aop:config>
			&lt;!&ndash; (안에 내용 설명)
			 	* : 리턴타입 상관없음
			 	com.spring.biz.. : biz포함 그 하위폴더 다 포함해서 찾고(패키지.클래스경로)
			 	*Impl : 클래스명이 Impl로 끝나는
			 	.*(..) : 모든 메소드와 파라미터도 갯수와 타입 관계없음
			 &ndash;&gt;
			<aop:pointcut id="allPointcut" expression="execution(* com.spring.biz..*Impl.*(..))"/>
			<aop:aspect ref="log">
				&lt;!&ndash; allPointcut의 메소드를 실행하기 전에 log내 printlog 메소드를 실행시킴 &ndash;&gt;
				<aop:before method="printLog" pointcut-ref="allPointcut"/>
			</aop:aspect>
		</aop:config>-->


		<!-- Log4jAdvice 클래스 사용해서 로그 남기기 -->
		<bean id="log4j" class="com.spring.biz.common.Log4jAdvice"/>
		<aop:config>
			<!-- pointcut : 핵심관심 중 AOP 적용대상으로 선정할 메소드 지정 -->
			<aop:pointcut id="allPointcut" expression="execution(* com.spring.biz..*Impl.*(..))"/>
			<aop:pointcut id="getPointcut" expression="execution(* com.spring.biz..*Impl.get*(..))"/>
			<!-- aspect : 적용대상(pointcut)과 적용할 횡단관심(advice) 연결 -->
			<aop:aspect ref="log4j">
				<aop:after method="printLogging" pointcut-ref="getPointcut"/>
			</aop:aspect>
		</aop:config>
</beans>
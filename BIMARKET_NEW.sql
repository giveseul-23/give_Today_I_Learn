-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

CREATE TABLE member
(
    ID          VARCHAR2(20)     NOT NULL, 
    PASSWORD    VARCHAR2(20)     NOT NULL, 
    NAME        VARCHAR2(20)     NOT NULL, 
    YEAR        VARCHAR2(4)     NOT NULL,
    MONTH       VARCHAR2(4)     NOT NULL,
    DAY         VARCHAR2(4)     NOT NULL,
    PHONNUM     VARCHAR2(20)     NOT NULL, 
    LOCATION    VARCHAR2(20)     NOT NULL, 
    EMAIL       VARCHAR2(60)     NOT NULL, 
    JOINDATE    VARCHAR2(20)    DEFAULT SYSDATE   NULL ,
    PROFILE_IMG VARCHAR2(60)    NULL,  
    
    CONSTRAINT MEMBER_PK PRIMARY KEY (ID)
)
/

COMMENT ON COLUMN member.ID IS '아이디'
/

COMMENT ON COLUMN member.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN member.NAME IS '이름'
/

COMMENT ON COLUMN member.YEAR IS '생일 연도'
/

COMMENT ON COLUMN member.MONTH IS '생일 월'
/

COMMENT ON COLUMN member.DAY IS '생일 일자'
/

COMMENT ON COLUMN member.PHONNUM IS '핸드폰번호'
/

COMMENT ON COLUMN member.LOCATION IS '주소'
/

COMMENT ON COLUMN member.EMAIL IS '이메일'
/

COMMENT ON COLUMN member.JOINDATE IS '가입날짜'
/

COMMENT ON COLUMN member.PROFILE_IMG IS '프로필사진'
/


-- member Table Create SQL
CREATE TABLE p_list
(
    P_NO            NUMBER(7)        NOT NULL, 
    SALE_ID         VARCHAR2(20)     NOT NULL, 
    PURCHASE_ID     VARCHAR2(20)     NULL, 
    PICTURE         VARCHAR2(20)     NOT NULL, 
    PRICE          VARCHAR2(20)     NOT NULL, 
    P_TITLE         VARCHAR2(20)     NOT NULL, 
    P_CONTENTS      VARCHAR2(500)    NULL, 
    P_STATUS          VARCHAR2(20)     NOT NULL, 
    P_CATEGORY      VARCHAR2(20)     NOT NULL, 
    LOCATION        VARCHAR2(20)     NOT NULL, 
    P_REGDATE       VARCHAR2(20)    DEFAULT SYSDATE   NULL ,
    CONSTRAINT P_LIST_PK PRIMARY KEY (P_NO)
)
/
--P_NO 시퀀스 생성
CREATE SEQUENCE  P_SEQUENCE
   MINVALUE 1 MAXVALUE 99999999999999999999999
   INCREMENT BY 1
   START WITH 1
   CACHE 20 NOORDER  NOCYCLE ;

--이미지 컬럼 수정
ALTER TABLE P_LIST 
ADD (PICTURE02 VARCHAR2(20) NOT NULL);

ALTER TABLE P_LIST RENAME COLUMN PICTURE TO PICTURE01;

COMMENT ON COLUMN P_LIST.PICTURE01 IS '사진01';

COMMENT ON COLUMN P_LIST.PICTURE02 IS '사진02';


COMMENT ON COLUMN p_list.SALE_ID IS '판매자_아이디'
/

COMMENT ON COLUMN p_list.PURCHASE_ID IS '구매자_아이디'
/

COMMENT ON COLUMN p_list.PICTURE IS '사진'
/

COMMENT ON COLUMN p_list.PRICE IS '금액'
/

COMMENT ON COLUMN p_list.P_NO IS '상품 등록번호'
/

COMMENT ON COLUMN p_list.P_TITLE IS '상품 제목'
/

COMMENT ON COLUMN p_list.P_CONTENTS IS '상품 내용'
/

COMMENT ON COLUMN p_list.P_STATUS IS '판매 상태'
/

COMMENT ON COLUMN p_list.P_CATEGORY IS '상품종류'
/

COMMENT ON COLUMN p_list.LOCATION IS '지역'
/

COMMENT ON COLUMN p_list.P_REGDATE IS '등록일(수정일)'
/

-- 리뷰테이블
CREATE TABLE REVIEW
(
    P_NO    NUMBER(7)       NOT NULL,
    R_STATUS VARCHAR2(10)   NOT NULL,
    R_CONTENT VARCHAR2(100) NOT NULL,
    R_REGDATE VARCHAR2(20) DEFAULT SYSDATE NULL,
    CONSTRAINT REVIEW_PK PRIMARY KEY (P_NO)
)
/
COMMENT ON COLUMN REVIEW.P_NO IS '상품 등록번호'
/

COMMENT ON COLUMN REVIEW.R_STATUS IS '리뷰 등록상태'
/

COMMENT ON COLUMN REVIEW.R_CONTENT IS '리뷰내용'
/

COMMENT ON COLUMN REVIEW.R_REGDATE IS '리뷰 등록날짜'
/

-- member Table Create SQL
CREATE TABLE BOARD
(
    B_NO        NUMBER(7)        NOT NULL,
    ID            VARCHAR2(20)     NOT NULL, 
    B_CATEGORY    VARCHAR2(20)     NOT NULL, 
    B_TITLE       VARCHAR2(20)     NOT NULL, 
    B_CONTENTS    VARCHAR2(500)    NOT NULL, 
    B_PASSWORD      VARCHAR2(20)     NOT NULL,
    B_STATUS        VARCHAR2(20)    NOT NULL,
    B_REGDATE       VARCHAR2(20)    DEFAULT SYSDATE   NULL ,
    B_ANSWER        VARCHAR2(200)    NULL,
    ANSWER_DATE     VARCHAR2(20)    DEFAULT SYSDATE   NULL ,
    CONSTRAINT BOARD_PK PRIMARY KEY (B_NO)
)
/

--B_NO 시퀀스 생성
CREATE SEQUENCE  B_SEQUENCE
   MINVALUE 1 MAXVALUE 99999999999999999999999
   INCREMENT BY 1
   START WITH 5001
   CACHE 20 NOORDER  NOCYCLE ;

COMMENT ON COLUMN board.B_NO IS '게시판 번호'
/

COMMENT ON COLUMN board.ID IS '아이디'
/

COMMENT ON COLUMN board.B_CATEGORY IS '게시글 종류'
/

COMMENT ON COLUMN board.B_TITLE IS '게시판 제목'
/

COMMENT ON COLUMN board.B_CONTENTS IS '게시판 내용'
/

COMMENT ON COLUMN board.B_PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN board.B_STATUS IS '답변등록상태'
/

COMMENT ON COLUMN board.B_REGDATE IS '등록날짜'
/

COMMENT ON COLUMN board.B_ANSWER IS '관리자답변'
/

COMMENT ON COLUMN board.ANSWER_DATE IS '답변날짜'
/

-- 공통테이블 생성
CREATE TABLE COMMON
(
    COMMON_CODE VARCHAR2(10) NOT NULL,
    COMMON_NAME VARCHAR2(30) NOT NULL
)
/

COMMENT ON COLUMN COMMON.COMMON_CODE IS '분류코드'
/

COMMENT ON COLUMN COMMON.COMMON_NAME IS '분류명'
/

-- member Table Create SQL
CREATE TABLE log
(
    ID          VARCHAR2(20)     NOT NULL, 
    PASSWORD    VARCHAR2(20)     NULL, 
    NAME        VARCHAR2(20)     NULL, 
    YEAR        VARCHAR2(4)     NOT NULL,
    MONTH       VARCHAR2(4)     NOT NULL,
    DAY         VARCHAR2(4)     NOT NULL,
    PHONNUM     VARCHAR2(20)     NULL, 
    LOCATION    VARCHAR2(20)    NULL, 
    EMAIL       VARCHAR2(60)     NULL, 
    REGDATE     VARCHAR2(20)  DEFAULT SYSDATE   NULL , 
    LOGMODE     VARCHAR2(20)     NULL, 
    CONSTRAINT LOG_PK PRIMARY KEY (ID)
)
/

COMMENT ON COLUMN log.ID IS '아이디'
/

COMMENT ON COLUMN log.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN log.NAME IS '이름'
/

COMMENT ON COLUMN log.YEAR IS '생일 연도'
/

COMMENT ON COLUMN log.YEAR IS '생일 달'
/

COMMENT ON COLUMN log.YEAR IS '생일 일'
/

COMMENT ON COLUMN log.PHONNUM IS '핸드폰번호'
/

COMMENT ON COLUMN log.LOCATION IS '주소'
/

COMMENT ON COLUMN log.EMAIL IS '이메일'
/

COMMENT ON COLUMN log.REGDATE IS '회원상태별날짜'
/

COMMENT ON COLUMN log.LOGMODE IS '모드'
/

--트리거 작성
create or replace TRIGGER AFTER_MEMBER_IUD
    AFTER INSERT OR UPDATE OR DELETE ON MEMBER
    FOR EACH ROW

BEGIN 
    -- INSERT 이벤트가 발생한 경우 로그 남기기
    IF INSERTING THEN
        INSERT INTO LOG
                                                -- JOB_GUBUN은 인서트작업이 이뤄졌는지를 구분하기 위한 컬럼명
                                                -- LOGDATE 는 DEFAULT 값을 줬기때문에 적지 않는다
            (ID, PASSWORD, NAME, YEAR, MONTH, DAY, PHONNUM, LOCATION, EMAIL, LOGMODE) 
        VALUES (:NEW.ID, :NEW.PASSWORD, :NEW.NAME, :NEW.YEAR, :NEW.MONTH, :NEW.DAY, :NEW.PHONNUM, :NEW.LOCATION, :NEW.EMAIL, '회원가입');
    END IF;
    
    -- UPDATE 이벤트가 발생한 경우 로그 남기기
    IF UPDATING THEN
        INSERT INTO LOG
            (ID, PASSWORD, PHONNUM, LOCATION, EMAIL, LOGMODE)
        VALUES (:OLD.ID
            , :OLD.PASSWORD || ' -> ' || :NEW.PASSWORD
            , :OLD.PHONNUM  || ' -> ' || :NEW.PHONNUM
            , :OLD.LOCATION  || ' -> ' || :NEW.LOCATION
            , :OLD.EMAIL  || ' -> ' || :NEW.EMAIL
            , '회원수정'
            );
    END IF;
    
    IF DELETING THEN
        INSERT INTO LOG
                 (ID, PASSWORD, NAME, YEAR, MONTH, DAY, PHONNUM, LOCATION, EMAIL, LOGMODE)
        VALUES (:OLD.ID, :OLD.PASSWORD, :OLD.NAME, :OLD.YEAR, :OLD.MONTH, :OLD.DAY, :OLD.PHONNUM, :OLD.LOCATION, :OLD.EMAIL, '회원삭제');
    END IF;
END;

--카테고리 데이터 추가
INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PS01', '판매중');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PS02', '판매완료');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('BS01', '답변대기중');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('BS02', '답변완료');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PC01', '의류');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PC02', '패션잡화');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PC03', '디지털/가전');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PC04', '도서');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PC05', '뷰티/미용');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('PC06', '기타');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('BC01', 'FAQ');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('BC02', '게시판');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('L01', '서울');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('L02', '경기');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('L03', '충청');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('L04', '전라');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('L05', '강원');

INSERT INTO COMMON(COMMON_CODE, COMMON_NAME)
VALUES('L06', '경상');

COMMIT;

-- 상품목록 데이터 추가
INSERT INTO P_LIST(P_NO, SALE_ID, PICTURE01, PRICE, P_TITLE
, P_CONTENTS, P_STATUS, P_CATEGORY, LOCATION, PICTURE02)
VALUES(P_SEQUENCE.NEXTVAL, 'giveseul', '1_1.PNG', '10000', '봄점퍼 코트8', 
'검색창에서 애슐리상점 오즈세컨 봄점퍼 코트 55  n1126  애슐리상점 톡답변이 늦어지면 문자부탁드립니다♡♡', 
'PS01', 'PC01', 'L01', '1_2.PNG');

INSERT INTO P_LIST(P_NO, SALE_ID, PICTURE01, PRICE, P_TITLE
, P_CONTENTS, P_STATUS, P_CATEGORY, LOCATION, PICTURE02)
VALUES(P_SEQUENCE.NEXTVAL, 'giveseul', '1_1.PNG', '10000', '봄점퍼 코트4', 
'오즈세컨 봄점퍼 코트 55  n1126  "애슐리상점"
사이즈        55  
표기          85-96-160
가슴둘레   50
총기장       69~78
면100%    와인갈색
제품문의는 ***-****-****또는 톡
톡답변이 늦어지면 문자부탁드립니다♡♡', 
'PS01', 'PC01', 'L01', '1_2.PNG');

commit;

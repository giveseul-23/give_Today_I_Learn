-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- MEMBER Table Create SQL
CREATE TABLE MEMBER
(
    ID               VARCHAR2(50)     NOT NULL, 
    PASSWORD         VARCHAR2(50)     NOT NULL, 
    NAME             VARCHAR2(30)     NOT NULL, 
    PHONE            VARCHAR2(30)     NOT NULL, 
    POST             VARCHAR2(20)     NULL, 
    ADDR_1           VARCHAR2(300)    NULL, 
    ADDR_2           VARCHAR2(300)    NULL, 
    GENDER           VARCHAR2(10)     NULL, 
    BIRTH            VARCHAR2(20)     NULL, 
    MEM_ORI_NAME     VARCHAR2(300)    NULL, 
    MEM_FILE_NAME    VARCHAR2(300)    NULL, 
    ROLE             VARCHAR2(20)     NOT NULL, 
    WITHDRAWAL       VARCHAR2(20)     NOT NULL, 
    CONSTRAINT MEMBER_PK PRIMARY KEY (ID)
)
/

COMMENT ON TABLE MEMBER IS '인적관리테이블'
/

COMMENT ON COLUMN MEMBER.ID IS '아이디(이메일)'
/

COMMENT ON COLUMN MEMBER.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN MEMBER.NAME IS '이름'
/

COMMENT ON COLUMN MEMBER.PHONE IS '연락처'
/

COMMENT ON COLUMN MEMBER.POST IS '우편번호'
/

COMMENT ON COLUMN MEMBER.ADDR_1 IS '도로명주소'
/

COMMENT ON COLUMN MEMBER.ADDR_2 IS '상세주소'
/

COMMENT ON COLUMN MEMBER.GENDER IS '성별'
/

COMMENT ON COLUMN MEMBER.BIRTH IS '생년월일'
/

COMMENT ON COLUMN MEMBER.MEM_ORI_NAME IS '기존 파일명'
/

COMMENT ON COLUMN MEMBER.MEM_FILE_NAME IS '업로드 파일명'
/

COMMENT ON COLUMN MEMBER.ROLE IS 'COMMON'
/

COMMENT ON COLUMN MEMBER.WITHDRAWAL IS 'COMMON'
/


-- MEMBER Table Create SQL
CREATE TABLE FIT_CLASS
(
    CLS_CODE         VARCHAR2(100)    NOT NULL, 
    TRAINER_ID       VARCHAR2(50)     NOT NULL, 
    CLS_CATEGORY     VARCHAR2(20)     NOT NULL, 
    CLS_NAME         VARCHAR2(500)    NOT NULL, 
    CLS_TAG          VARCHAR2(100)    NULL, 
    START_DATE       DATE             NOT NULL, 
    END_DATE         DATE             NOT NULL, 
    YOIL             VARCHAR2(20)     NOT NULL, 
    START_TIME       DATE             NOT NULL, 
    END_TIME         DATE             NOT NULL, 
    LAPSE            NUMBER           NOT NULL, 
    CLS_LEVEL        VARCHAR2(20)     NOT NULL, 
    EQUIP            VARCHAR2(100)    NULL, 
    PER_PRICE        NUMBER           NOT NULL, 
    CLS_INFO         CLOB             NOT NULL, 
    CURRICULUM       CLOB             NOT NULL, 
    CLS_ORI_NAME     VARCHAR2(300)    NOT NULL, 
    CLS_FILE_NAME    VARCHAR2(300)    NOT NULL, 
    CLS_STATUS       VARCHAR2(20)     NOT NULL, 
    MAX_MEM          NUMBER           NOT NULL, 
    CALORIE          NUMBER           NOT NULL, 
    MEET_URL         VARCHAR2(300)    NOT NULL, 
    CONSTRAINT FIT_CLASS_PK PRIMARY KEY (CLS_CODE)
)
/

COMMENT ON TABLE FIT_CLASS IS '수업테이블'
/

COMMENT ON COLUMN FIT_CLASS.CLS_CODE IS '클래스코드'
/

COMMENT ON COLUMN FIT_CLASS.TRAINER_ID IS '강사아이디'
/

COMMENT ON COLUMN FIT_CLASS.CLS_CATEGORY IS 'COMMON'
/

COMMENT ON COLUMN FIT_CLASS.CLS_NAME IS '수업명'
/

COMMENT ON COLUMN FIT_CLASS.CLS_TAG IS '클래스태그'
/

COMMENT ON COLUMN FIT_CLASS.START_DATE IS '시작일'
/

COMMENT ON COLUMN FIT_CLASS.END_DATE IS '마지막일'
/

COMMENT ON COLUMN FIT_CLASS.YOIL IS '요일'
/

COMMENT ON COLUMN FIT_CLASS.START_TIME IS '시작시간'
/

COMMENT ON COLUMN FIT_CLASS.END_TIME IS '종료시간'
/

COMMENT ON COLUMN FIT_CLASS.LAPSE IS '수업횟수'
/

COMMENT ON COLUMN FIT_CLASS.CLS_LEVEL IS '난이도'
/

COMMENT ON COLUMN FIT_CLASS.EQUIP IS '운동장비'
/

COMMENT ON COLUMN FIT_CLASS.PER_PRICE IS '회당가격'
/

COMMENT ON COLUMN FIT_CLASS.CLS_INFO IS '수업내용 설명'
/

COMMENT ON COLUMN FIT_CLASS.CURRICULUM IS '커리큘럼'
/

COMMENT ON COLUMN FIT_CLASS.CLS_ORI_NAME IS '기존파일명'
/

COMMENT ON COLUMN FIT_CLASS.CLS_FILE_NAME IS '업로드파일명'
/

COMMENT ON COLUMN FIT_CLASS.CLS_STATUS IS 'COMMON'
/

COMMENT ON COLUMN FIT_CLASS.MAX_MEM IS '최대정원'
/

COMMENT ON COLUMN FIT_CLASS.CALORIE IS '칼로리'
/

COMMENT ON COLUMN FIT_CLASS.MEET_URL IS '화상미팅 주소(URL)'
/


-- MEMBER Table Create SQL
CREATE TABLE WISH_CLASS
(
    MEM_ID            VARCHAR2(50)     NOT NULL, 
    CLASS_CODE    VARCHAR2(100)    NOT NULL
)
/

COMMENT ON COLUMN WISH_CLASS.MEM_ID IS '회원 아이디'
/

COMMENT ON COLUMN WISH_CLASS.CLASS_CODE IS '클래스코드'
/


-- MEMBER Table Create SQL
CREATE TABLE REVIEW
(
    TRAINER_ID        VARCHAR2(50)      NOT NULL, 
    CLASS_CODE        VARCHAR2(100)     NOT NULL, 
    REVIEW_CONTENT    VARCHAR2(2000)    NOT NULL, 
    MEM_ID            VARCHAR2(50)      NOT NULL, 
    REG_DATE          DATE              DEFAULT SYSDATE NOT NULL, 
    STAR              NUMBER            DEFAULT 5 NOT NULL
)
/

COMMENT ON COLUMN REVIEW.TRAINER_ID IS '강사아이디'
/

COMMENT ON COLUMN REVIEW.CLASS_CODE IS '클래스코드'
/

COMMENT ON COLUMN REVIEW.REVIEW_CONTENT IS '후기내용'
/

COMMENT ON COLUMN REVIEW.MEM_ID IS '회원아이디'
/

COMMENT ON COLUMN REVIEW.REG_DATE IS '등록일자'
/

COMMENT ON COLUMN REVIEW.STAR IS '별점'
/


-- MEMBER Table Create SQL
CREATE TABLE COUPON_INFO
(
    COUPON_NAME          VARCHAR2(50)    NOT NULL, 
    COUPON_CODE          VARCHAR2(20)    NOT NULL, 
    DISCOUNT_PRICE       NUMBER          NOT NULL, 
    COUPON_START_DATE    DATE            NULL, 
    COUPON_END_DATE      DATE            NULL   
)
/

COMMENT ON TABLE COUPON_INFO IS '쿠폰내역'
/

COMMENT ON COLUMN COUPON_INFO.COUPON_NAME IS '쿠폰이름'
/

COMMENT ON COLUMN COUPON_INFO.COUPON_CODE IS 'COMMON - 쿠폰 종류번호'
/

COMMENT ON COLUMN COUPON_INFO.DISCOUNT_PRICE IS '할인 금액'
/

COMMENT ON COLUMN COUPON_INFO.COUPON_START_DATE IS '쿠폰 시작날짜'
/

COMMENT ON COLUMN COUPON_INFO.COUPON_END_DATE IS '쿠폰 마감날짜'
/


-- MEMBER Table Create SQL
CREATE TABLE TRAINER_REGISTER
(
    TRAINER_ID       VARCHAR2(20)      NOT NULL, 
    TRAINER_INTRO    VARCHAR2(1000)    NOT NULL, 
    CAREER           VARCHAR2(1000)    NOT NULL, 
    QUESTION_1              VARCHAR2(20)      NULL, 
    QUESTION_2              VARCHAR2(20)      NULL, 
    TOTAL_CAL        NUMBER            DEFAULT 0 NOT NULL, 
    REG_STATUS       VARCHAR2(20)      NOT NULL, 
    BANK_ACCOUNT     VARCHAR2(30)      NULL, 
    BANK_NAME        VARCHAR2(20)      NULL   
)
/

COMMENT ON TABLE TRAINER_REGISTER IS '강사등록'
/

COMMENT ON COLUMN TRAINER_REGISTER.TRAINER_ID IS '강사아이디'
/

COMMENT ON COLUMN TRAINER_REGISTER.TRAINER_INTRO IS '강사소개'
/

COMMENT ON COLUMN TRAINER_REGISTER.CAREER IS '자격 및 경력'
/

COMMENT ON COLUMN TRAINER_REGISTER.QUESTION_1 IS '질문1'
/

COMMENT ON COLUMN TRAINER_REGISTER.QUESTION_2 IS '질문2'
/

COMMENT ON COLUMN TRAINER_REGISTER.TOTAL_CAL IS '총 정산금액'
/

COMMENT ON COLUMN TRAINER_REGISTER.REG_STATUS IS 'COMMON'
/

COMMENT ON COLUMN TRAINER_REGISTER.BANK_ACCOUNT IS '계좌번호'
/

COMMENT ON COLUMN TRAINER_REGISTER.BANK_NAME IS '은행명'
/


-- MEMBER Table Create SQL
CREATE TABLE PAYMENT
(
    PAY_INDEX       NUMBER          NOT NULL, 
    CLASS_CODE      NUMBER          NULL, 
    ORDER_NUM       VARCHAR2(20)    NULL, 
    MEM_ID          VARCHAR2(50)    NOT NULL, 
    ORIGIN_PRICE    NUMBER          NOT NULL, 
    PAID_PRICE      NUMBER          NOT NULL, 
    COMMISSION      NUMBER          NULL, 
    NET_PRICE       NUMBER          NULL, 
    PAY_METHOD      VARCHAR2(20)    NOT NULL, 
    PAY_DATE        DATE            DEFAULT SYSDATE NOT NULL, 
    CONSTRAINT PAYMENT_PK PRIMARY KEY (PAY_INDEX)
)
/

CREATE SEQUENCE PAYMENT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER PAYMENT_AI_TRG
BEFORE INSERT ON PAYMENT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT PAYMENT_SEQ.NEXTVAL
    INTO :NEW.PAY_INDEX
    FROM DUAL;
END;
/

--DROP TRIGGER PAYMENT_AI_TRG;
/

--DROP SEQUENCE PAYMENT_SEQ;
/

COMMENT ON TABLE PAYMENT IS '결제내역'
/

COMMENT ON COLUMN PAYMENT.PAY_INDEX IS '결제내역 고유 인덱스 번호'
/

COMMENT ON COLUMN PAYMENT.CLASS_CODE IS '클래스 상품페이지 번호'
/

COMMENT ON COLUMN PAYMENT.ORDER_NUM IS '쇼핑몰 상품 주문번호'
/

COMMENT ON COLUMN PAYMENT.MEM_ID IS '회원아이디'
/

COMMENT ON COLUMN PAYMENT.ORIGIN_PRICE IS '원래 금액'
/

COMMENT ON COLUMN PAYMENT.PAID_PRICE IS '유저가 결제한 금액'
/

COMMENT ON COLUMN PAYMENT.COMMISSION IS '회사에 들어가는 수수료'
/

COMMENT ON COLUMN PAYMENT.NET_PRICE IS '실제 강사가 받는 순이익'
/

COMMENT ON COLUMN PAYMENT.PAY_METHOD IS 'COMMON'
/

COMMENT ON COLUMN PAYMENT.PAY_DATE IS '실제 결제한 날짜'
/


-- MEMBER Table Create SQL
CREATE TABLE PRODUCT
(
    PRO_NUM      VARCHAR2(20)      NOT NULL, 
    PRO_NAME     VARCHAR2(300)     NOT NULL, 
    PRO_PRICE    NUMBER            NOT NULL, 
    PRO_INFO     VARCHAR2(1000)    NOT NULL, 
    PRO_IMG      VARCHAR2(300)     NOT NULL, 
    PRO_STOCK    NUMBER            NOT NULL, 
    CONSTRAINT PRODUCT_PK PRIMARY KEY (PRO_NUM)
)
/

COMMENT ON COLUMN PRODUCT.PRO_NUM IS '상품번호'
/

COMMENT ON COLUMN PRODUCT.PRO_NAME IS '상품명'
/

COMMENT ON COLUMN PRODUCT.PRO_PRICE IS '상품가격'
/

COMMENT ON COLUMN PRODUCT.PRO_INFO IS '상품설명'
/

COMMENT ON COLUMN PRODUCT.PRO_IMG IS '상품이미지'
/

COMMENT ON COLUMN PRODUCT.PRO_STOCK IS '재고수량'
/


-- MEMBER Table Create SQL
CREATE TABLE CART
(
    CART_CODE    NUMBER          NOT NULL, 
    MEM_ID       VARCHAR2(50)    NOT NULL, 
    PRO_NUM      VARCHAR2(20)    NOT NULL, 
    AMOUNT       NUMBER          NOT NULL, 
    CONSTRAINT CART_PK PRIMARY KEY (CART_CODE)
)
/

CREATE SEQUENCE CART_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER CART_AI_TRG
BEFORE INSERT ON CART 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT CART_SEQ.NEXTVAL
    INTO :NEW.CART_CODE
    FROM DUAL;
END;
/

--DROP TRIGGER CART_AI_TRG;
/

--DROP SEQUENCE CART_SEQ;
/

COMMENT ON COLUMN CART.CART_CODE IS '장바구니 코드'
/

COMMENT ON COLUMN CART.MEM_ID IS '회원 아이디'
/

COMMENT ON COLUMN CART.PRO_NUM IS '상품번호'
/

COMMENT ON COLUMN CART.AMOUNT IS '상품수량'
/


-- MEMBER Table Create SQL
CREATE TABLE PRO_ORDER
(
    ORDER_NUM       VARCHAR2(100)     NOT NULL, 
    MEM_ID          VARCHAR2(50)      NOT NULL, 
    TOTAL_PRICE     NUMBER            NOT NULL, 
    ORDER_DATE      DATE              DEFAULT SYSDATE NOT NULL, 
    POST            VARCHAR2(20)      NOT NULL, 
    ADDR_1          VARCHAR2(300)     NOT NULL, 
    ADDR_2          VARCHAR2(300)     NOT NULL, 
    DELIVERY_MSG    VARCHAR2(1000)    NULL   
)
/

COMMENT ON COLUMN PRO_ORDER.ORDER_NUM IS '주문에 대한 관리번호'
/

COMMENT ON COLUMN PRO_ORDER.MEM_ID IS '주문자 아이디'
/

COMMENT ON COLUMN PRO_ORDER.TOTAL_PRICE IS '총 주문 금액'
/

COMMENT ON COLUMN PRO_ORDER.ORDER_DATE IS '결제한 날짜'
/

COMMENT ON COLUMN PRO_ORDER.POST IS '우편번호'
/

COMMENT ON COLUMN PRO_ORDER.ADDR_1 IS '도로명주소'
/

COMMENT ON COLUMN PRO_ORDER.ADDR_2 IS '상세주소'
/

COMMENT ON COLUMN PRO_ORDER.DELIVERY_MSG IS '경비실에 맡겨주세요'
/


-- MEMBER Table Create SQL
CREATE TABLE ORDER_DETAIL
(
    ORDER_NUM    VARCHAR2(100)    NOT NULL, 
    PRO_NUM      VARCHAR2(20)     NOT NULL, 
    AMOUNT       NUMBER           NOT NULL
)
/

COMMENT ON COLUMN ORDER_DETAIL.ORDER_NUM IS '주문서 번호'
/

COMMENT ON COLUMN ORDER_DETAIL.PRO_NUM IS '상품번호'
/

COMMENT ON COLUMN ORDER_DETAIL.AMOUNT IS '수량'
/


-- MEMBER Table Create SQL
CREATE TABLE CHECK_IN
(
    CLASS_CODE      NUMBER          NOT NULL, 
    MEM_ID          VARCHAR2(50)    NOT NULL, 
    COUNTING_DAY    VARCHAR2(20)    DEFAULT SYSDATE NOT NULL
)
/

COMMENT ON COLUMN CHECK_IN.CLASS_CODE IS '클래스코드'
/

COMMENT ON COLUMN CHECK_IN.MEM_ID IS '회원아이디'
/

COMMENT ON COLUMN CHECK_IN.COUNTING_DAY IS '입장한 날짜'
/


-- MEMBER Table Create SQL
CREATE TABLE COMMON
(
    COMMON_CODE    VARCHAR2(20)    NOT NULL, 
    COMMON_NAME    VARCHAR2(20)    NOT NULL
)
/

COMMENT ON TABLE COMMON IS '상태테이블'
/

COMMENT ON COLUMN COMMON.COMMON_CODE IS '공통코드'
/

COMMENT ON COLUMN COMMON.COMMON_NAME IS '공통이름'
/


-- MEMBER Table Create SQL
CREATE TABLE CALENDER
(
    MEM_ID         VARCHAR2(50)    NOT NULL, 
    ATTEND_DATE    VARCHAR2(20)    DEFAULT SYSDATE NOT NULL,
    CONSTRAINT CALENDER_PK PRIMARY KEY 
  (
    MEM_ID , ATTEND_DATE 
  )
)
/

COMMENT ON COLUMN CALENDER.MEM_ID IS '회원아이디'
/

COMMENT ON COLUMN CALENDER.ATTEND_DATE IS '출석일자'
/


-- MEMBER Table Create SQL
CREATE TABLE MEM_COUPON
(
    COUPON_INDEX       NUMBER          NOT NULL, 
    MEM_ID             VARCHAR2(50)    NOT NULL, 
    COUPON_CODE        VARCHAR2(20)    NOT NULL, 
    COUPON_STATUS      VARCHAR2(20)    NOT NULL, 
    COUPON_USE_DATE    DATE            NOT NULL, 
    CONSTRAINT MEM_COUPON_PK PRIMARY KEY (COUPON_INDEX)
)
/

CREATE SEQUENCE MEM_COUPON_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MEM_COUPON_AI_TRG
BEFORE INSERT ON MEM_COUPON 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MEM_COUPON_SEQ.NEXTVAL
    INTO :NEW.COUPON_INDEX
    FROM DUAL;
END;
/

--DROP TRIGGER MEM_COUPON_AI_TRG;
/

--DROP SEQUENCE MEM_COUPON_SEQ;
/

COMMENT ON TABLE MEM_COUPON IS '쿠폰발급 테이블'
/

COMMENT ON COLUMN MEM_COUPON.COUPON_INDEX IS '쿠폰인덱스'
/

COMMENT ON COLUMN MEM_COUPON.MEM_ID IS '회원아이디'
/

COMMENT ON COLUMN MEM_COUPON.COUPON_CODE IS '쿠폰코드'
/

COMMENT ON COLUMN MEM_COUPON.COUPON_STATUS IS 'COMMON'
/

COMMENT ON COLUMN MEM_COUPON.COUPON_USE_DATE IS '쿠폰 사용날짜'
/

